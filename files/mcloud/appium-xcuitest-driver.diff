diff --git a/lib/ios-deploy.js b/lib/ios-deploy.js
index c4d8b92..d2e5bef 100644
--- a/lib/ios-deploy.js
+++ b/lib/ios-deploy.js
@@ -11,7 +11,7 @@ const APPLICATION_INSTALLED_NOTIFICATION = 'com.apple.mobile.application_install
 const INSTALLATION_STAGING_DIR = 'PublicStaging';
 const DEFAULT_ITEM_PUSH_TIMEOUT = 30 * 1000;
 const APPLICATION_NOTIFICATION_TIMEOUT = 30 * 1000;
-const IOS_DEPLOY = 'ios-deploy';
+const IOS_DEPLOY = 'ios';
 
 class IOSDeploy {
 
@@ -20,11 +20,15 @@ class IOSDeploy {
   }
 
   async remove (bundleid) {
-    const service = await services.startInstallationProxyService(this.udid);
     try {
-      await service.uninstallApplication(bundleid);
-    } finally {
-      service.close();
+      await exec(IOS_DEPLOY, [
+        'uninstall', bundleid,
+        '--udid=' + this.udid
+      ]);
+    } catch (err1) {
+      throw new Error(`App is not uninstalled '${bundleid}':\n` +
+        `  - ${err1.message}\n` +
+        `  - ${err1.stderr || err1.stdout || err1.message}`);
     }
   }
 
@@ -49,8 +53,9 @@ class IOSDeploy {
       }
       try {
         await exec(IOS_DEPLOY, [
-          '--id', this.udid,
-          '--bundle', app,
+          'install',
+          '--path=' + app,
+          '--udid=' + this.udid
         ]);
       } catch (err1) {
         throw new Error(`Could not install '${app}':\n` +
@@ -151,13 +156,43 @@ class IOSDeploy {
    *     {"com.apple.frontboard.delete-application-snapshots":true,..
    */
   async isAppInstalled (bundleid) {
-    const service = await services.startInstallationProxyService(this.udid);
+    // verify if app installed among system first!
     try {
-      const applications = await service.lookupApplications({ bundleIds: bundleid });
-      return !!applications[bundleid];
-    } finally {
-      service.close();
+      let {stdout, stderr, code} = await exec(IOS_DEPLOY, [
+        'apps',
+        '--system',
+        '--udid=' + this.udid
+      ]);
+      if (stdout != null && stdout.indexOf(bundleid) !== -1) {
+        log.debug(bundleid + ' is found among system apps.');
+        return true;
+      } else {
+        log.debug(bundleid + ' is NOT found among system apps.');
+      }
+    } catch (err1) {
+      throw new Error(`App is no installed among system apps '${bundleid}':\n` +
+        `  - ${err1.message}\n` +
+        `  - ${err1.stderr || err1.stdout || err1.message}`);
+    }
+
+    try {
+      let {stdout, stderr, code} = await exec(IOS_DEPLOY, [
+        'apps',
+        '--udid=' + this.udid
+      ]);
+      if (stdout != null && stdout.indexOf(bundleid) !== -1) {
+        log.debug(bundleid + ' is found among non system apps.');
+        return true;
+      } else {
+        log.debug(bundleid + ' is NOT found among non system apps.');
+      }
+    } catch (err1) {
+      throw new Error(`App is no installed among non system apps '${bundleid}':\n` +
+        `  - ${err1.message}\n` +
+        `  - ${err1.stderr || err1.stdout || err1.message}`);
     }
+
+    return false;
   }
 
   /**
