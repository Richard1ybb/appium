"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("source-map-support/register");

var _fs = _interopRequireDefault(require("appium-support/build/lib/fs"));

var _path = _interopRequireDefault(require("path"));

var _axios = _interopRequireDefault(require("axios"));

var _logger = _interopRequireDefault(require("./logger"));

const path = require('path');

async function getLocalAppsFolder() {
  return process.env.APPIUM_APPS_DIR;
}

async function getSharedFolderForAppUrl(url) {
  const sub = await getLocalFileForAppUrl(url);
  const lastSlashInd = sub.lastIndexOf(path.sep);
  var targetPath;

  if (lastSlashInd != -1) {
    targetPath = sub.substring(0, lastSlashInd);
  } else {
    targetPath = '';
  }

  _logger.default.info(`Target path [getSharedFolderForAppUrl]: ${targetPath}`);

  const folderExists = await _fs.default.exists(targetPath);
  if (!folderExists) await _fs.default.mkdir(targetPath, {
    recursive: true
  });
  return targetPath;
}

async function getLocalFileForAppUrl(url) {
  var sub = url.substring(url.indexOf('//') + 2);
  sub = sub.substring(sub.indexOf('/'));

  if (sub.includes('?')) {
    sub = sub.substring(0, sub.indexOf('?'));
  }

  sub = sub.replace(/\//g, path.sep);

  const targetPath = _path.default.join(await getLocalAppsFolder(), sub);

  _logger.default.info(`Target path [getLocalFileForAppUrl]: ${targetPath}`);

  return targetPath;
}

async function getFileContentLength(remoteUrl) {
  const timeout = 5000;
  const requestOpts = {
    url: remoteUrl,
    responseType: 'stream',
    timeout
  };

  try {
    const {
      headers: responseHeaders
    } = await (0, _axios.default)(requestOpts);
    const responseLength = parseInt(responseHeaders['content-length'], 10);

    _logger.default.info("!!CONTENT-LENGTH: " + responseLength);

    return responseLength;
  } catch (err) {
    throw new Error(`Cannot get file content-length from ${remoteUrl}: ${err.message}`);
  }
}

module.exports = {
  getLocalAppsFolder,
  getSharedFolderForAppUrl,
  getLocalFileForAppUrl,
  getFileContentLength
};require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9iYXNlZHJpdmVyL21jbG91ZC11dGlscy5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImdldExvY2FsQXBwc0ZvbGRlciIsInByb2Nlc3MiLCJlbnYiLCJBUFBJVU1fQVBQU19ESVIiLCJnZXRTaGFyZWRGb2xkZXJGb3JBcHBVcmwiLCJ1cmwiLCJzdWIiLCJnZXRMb2NhbEZpbGVGb3JBcHBVcmwiLCJsYXN0U2xhc2hJbmQiLCJsYXN0SW5kZXhPZiIsInNlcCIsInRhcmdldFBhdGgiLCJzdWJzdHJpbmciLCJsb2dnZXIiLCJpbmZvIiwiZm9sZGVyRXhpc3RzIiwiZnMiLCJleGlzdHMiLCJta2RpciIsInJlY3Vyc2l2ZSIsImluZGV4T2YiLCJpbmNsdWRlcyIsInJlcGxhY2UiLCJub2RlUGF0aCIsImpvaW4iLCJnZXRGaWxlQ29udGVudExlbmd0aCIsInJlbW90ZVVybCIsInRpbWVvdXQiLCJyZXF1ZXN0T3B0cyIsInJlc3BvbnNlVHlwZSIsImhlYWRlcnMiLCJyZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZUxlbmd0aCIsInBhcnNlSW50IiwiZXJyIiwiRXJyb3IiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBREEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFHQSxlQUFlQyxrQkFBZixHQUFvQztBQUNoQyxTQUFPQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsZUFBbkI7QUFDSDs7QUFFRCxlQUFlQyx3QkFBZixDQUF3Q0MsR0FBeEMsRUFBNkM7QUFDekMsUUFBTUMsR0FBRyxHQUFHLE1BQU1DLHFCQUFxQixDQUFDRixHQUFELENBQXZDO0FBRUEsUUFBTUcsWUFBWSxHQUFHRixHQUFHLENBQUNHLFdBQUosQ0FBZ0JYLElBQUksQ0FBQ1ksR0FBckIsQ0FBckI7QUFDQSxNQUFJQyxVQUFKOztBQUNBLE1BQUdILFlBQVksSUFBSSxDQUFDLENBQXBCLEVBQXVCO0FBQ25CRyxJQUFBQSxVQUFVLEdBQUdMLEdBQUcsQ0FBQ00sU0FBSixDQUFjLENBQWQsRUFBaUJKLFlBQWpCLENBQWI7QUFDSCxHQUZELE1BRU87QUFDSEcsSUFBQUEsVUFBVSxHQUFHLEVBQWI7QUFDSDs7QUFFREUsa0JBQU9DLElBQVAsQ0FBYSwyQ0FBMENILFVBQVcsRUFBbEU7O0FBQ0EsUUFBTUksWUFBWSxHQUFHLE1BQU1DLFlBQUdDLE1BQUgsQ0FBVU4sVUFBVixDQUEzQjtBQUNBLE1BQUcsQ0FBQ0ksWUFBSixFQUNJLE1BQU1DLFlBQUdFLEtBQUgsQ0FBU1AsVUFBVCxFQUFxQjtBQUFDUSxJQUFBQSxTQUFTLEVBQUc7QUFBYixHQUFyQixDQUFOO0FBRUosU0FBT1IsVUFBUDtBQUNIOztBQUVELGVBQWVKLHFCQUFmLENBQXFDRixHQUFyQyxFQUEwQztBQUN0QyxNQUFJQyxHQUFHLEdBQUdELEdBQUcsQ0FBQ08sU0FBSixDQUFjUCxHQUFHLENBQUNlLE9BQUosQ0FBWSxJQUFaLElBQW9CLENBQWxDLENBQVY7QUFDQWQsRUFBQUEsR0FBRyxHQUFHQSxHQUFHLENBQUNNLFNBQUosQ0FBY04sR0FBRyxDQUFDYyxPQUFKLENBQVksR0FBWixDQUFkLENBQU47O0FBQ0EsTUFBR2QsR0FBRyxDQUFDZSxRQUFKLENBQWEsR0FBYixDQUFILEVBQXNCO0FBQ2xCZixJQUFBQSxHQUFHLEdBQUdBLEdBQUcsQ0FBQ00sU0FBSixDQUFjLENBQWQsRUFBaUJOLEdBQUcsQ0FBQ2MsT0FBSixDQUFZLEdBQVosQ0FBakIsQ0FBTjtBQUNIOztBQUNEZCxFQUFBQSxHQUFHLEdBQUdBLEdBQUcsQ0FBQ2dCLE9BQUosQ0FBWSxLQUFaLEVBQW1CeEIsSUFBSSxDQUFDWSxHQUF4QixDQUFOOztBQUVBLFFBQU1DLFVBQVUsR0FBR1ksY0FBU0MsSUFBVCxDQUFjLE1BQU14QixrQkFBa0IsRUFBdEMsRUFBMENNLEdBQTFDLENBQW5COztBQUNBTyxrQkFBT0MsSUFBUCxDQUFhLHdDQUF1Q0gsVUFBVyxFQUEvRDs7QUFDQSxTQUFPQSxVQUFQO0FBQ0g7O0FBRUQsZUFBZWMsb0JBQWYsQ0FBb0NDLFNBQXBDLEVBQStDO0FBQzNDLFFBQU1DLE9BQU8sR0FBRyxJQUFoQjtBQUNBLFFBQU1DLFdBQVcsR0FBRztBQUNoQnZCLElBQUFBLEdBQUcsRUFBRXFCLFNBRFc7QUFFaEJHLElBQUFBLFlBQVksRUFBRSxRQUZFO0FBR2hCRixJQUFBQTtBQUhnQixHQUFwQjs7QUFNQSxNQUFJO0FBQ0EsVUFBTTtBQUNKRyxNQUFBQSxPQUFPLEVBQUVDO0FBREwsUUFFRixNQUFNLG9CQUFNSCxXQUFOLENBRlY7QUFHQSxVQUFNSSxjQUFjLEdBQUdDLFFBQVEsQ0FBQ0YsZUFBZSxDQUFDLGdCQUFELENBQWhCLEVBQW9DLEVBQXBDLENBQS9COztBQUNBbEIsb0JBQU9DLElBQVAsQ0FBWSx1QkFBdUJrQixjQUFuQzs7QUFDQSxXQUFPQSxjQUFQO0FBQ0gsR0FQRCxDQU9FLE9BQU9FLEdBQVAsRUFBWTtBQUNWLFVBQU0sSUFBSUMsS0FBSixDQUFXLHVDQUFzQ1QsU0FBVSxLQUFJUSxHQUFHLENBQUNFLE9BQVEsRUFBM0UsQ0FBTjtBQUNIO0FBQ0o7O0FBR0RDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFdEMsRUFBQUEsa0JBQUY7QUFBc0JJLEVBQUFBLHdCQUF0QjtBQUFnREcsRUFBQUEscUJBQWhEO0FBQXVFa0IsRUFBQUE7QUFBdkUsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnYXBwaXVtLXN1cHBvcnQvYnVpbGQvbGliL2ZzJztcclxuaW1wb3J0IG5vZGVQYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldExvY2FsQXBwc0ZvbGRlcigpIHtcclxuICAgIHJldHVybiBwcm9jZXNzLmVudi5BUFBJVU1fQVBQU19ESVI7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFNoYXJlZEZvbGRlckZvckFwcFVybCh1cmwpIHtcclxuICAgIGNvbnN0IHN1YiA9IGF3YWl0IGdldExvY2FsRmlsZUZvckFwcFVybCh1cmwpO1xyXG5cclxuICAgIGNvbnN0IGxhc3RTbGFzaEluZCA9IHN1Yi5sYXN0SW5kZXhPZihwYXRoLnNlcCk7XHJcbiAgICB2YXIgdGFyZ2V0UGF0aDtcclxuICAgIGlmKGxhc3RTbGFzaEluZCAhPSAtMSkge1xyXG4gICAgICAgIHRhcmdldFBhdGggPSBzdWIuc3Vic3RyaW5nKDAsIGxhc3RTbGFzaEluZCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRhcmdldFBhdGggPSAnJztcclxuICAgIH1cclxuXHJcbiAgICBsb2dnZXIuaW5mbyhgVGFyZ2V0IHBhdGggW2dldFNoYXJlZEZvbGRlckZvckFwcFVybF06ICR7dGFyZ2V0UGF0aH1gKVxyXG4gICAgY29uc3QgZm9sZGVyRXhpc3RzID0gYXdhaXQgZnMuZXhpc3RzKHRhcmdldFBhdGgpO1xyXG4gICAgaWYoIWZvbGRlckV4aXN0cylcclxuICAgICAgICBhd2FpdCBmcy5ta2Rpcih0YXJnZXRQYXRoLCB7cmVjdXJzaXZlIDogdHJ1ZX0pO1xyXG4gIFxyXG4gICAgcmV0dXJuIHRhcmdldFBhdGg7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldExvY2FsRmlsZUZvckFwcFVybCh1cmwpIHtcclxuICAgIHZhciBzdWIgPSB1cmwuc3Vic3RyaW5nKHVybC5pbmRleE9mKCcvLycpICsgMilcclxuICAgIHN1YiA9IHN1Yi5zdWJzdHJpbmcoc3ViLmluZGV4T2YoJy8nKSk7XHJcbiAgICBpZihzdWIuaW5jbHVkZXMoJz8nKSkge1xyXG4gICAgICAgIHN1YiA9IHN1Yi5zdWJzdHJpbmcoMCwgc3ViLmluZGV4T2YoJz8nKSk7XHJcbiAgICB9XHJcbiAgICBzdWIgPSBzdWIucmVwbGFjZSgvXFwvL2csIHBhdGguc2VwKTtcclxuXHJcbiAgICBjb25zdCB0YXJnZXRQYXRoID0gbm9kZVBhdGguam9pbihhd2FpdCBnZXRMb2NhbEFwcHNGb2xkZXIoKSwgc3ViKTtcclxuICAgIGxvZ2dlci5pbmZvKGBUYXJnZXQgcGF0aCBbZ2V0TG9jYWxGaWxlRm9yQXBwVXJsXTogJHt0YXJnZXRQYXRofWApXHJcbiAgICByZXR1cm4gdGFyZ2V0UGF0aDtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0RmlsZUNvbnRlbnRMZW5ndGgocmVtb3RlVXJsKSB7XHJcbiAgICBjb25zdCB0aW1lb3V0ID0gNTAwMDtcclxuICAgIGNvbnN0IHJlcXVlc3RPcHRzID0ge1xyXG4gICAgICAgIHVybDogcmVtb3RlVXJsLFxyXG4gICAgICAgIHJlc3BvbnNlVHlwZTogJ3N0cmVhbScsXHJcbiAgICAgICAgdGltZW91dCxcclxuICAgIH07XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICBoZWFkZXJzOiByZXNwb25zZUhlYWRlcnMsXHJcbiAgICAgICAgfSA9IGF3YWl0IGF4aW9zKHJlcXVlc3RPcHRzKTtcclxuICAgICAgICBjb25zdCByZXNwb25zZUxlbmd0aCA9IHBhcnNlSW50KHJlc3BvbnNlSGVhZGVyc1snY29udGVudC1sZW5ndGgnXSwgMTApO1xyXG4gICAgICAgIGxvZ2dlci5pbmZvKFwiISFDT05URU5ULUxFTkdUSDogXCIgKyByZXNwb25zZUxlbmd0aCk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlTGVuZ3RoO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZ2V0IGZpbGUgY29udGVudC1sZW5ndGggZnJvbSAke3JlbW90ZVVybH06ICR7ZXJyLm1lc3NhZ2V9YCk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ2V0TG9jYWxBcHBzRm9sZGVyLCBnZXRTaGFyZWRGb2xkZXJGb3JBcHBVcmwsIGdldExvY2FsRmlsZUZvckFwcFVybCwgZ2V0RmlsZUNvbnRlbnRMZW5ndGggfSJdLCJmaWxlIjoibGliL2Jhc2Vkcml2ZXIvbWNsb3VkLXV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii4uXFwuLlxcLi4ifQ==
